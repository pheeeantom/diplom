//Blockly.Events.fire(new (Blockly.Events.get(Blockly.Events.BLOCK_MOVE))(workspace.getBlockById(event.blockId)));
						var next = workspace.getBlockById(event.blockId);
						while (next.childBlocks_[0] != null) {
							next = next.childBlocks_[0];
							//console.log(next.type);
					    	//console.log(root.type);
							if (!((workspace.getBlockById(event.blockId).inputList[0].fieldRow[1].getValue() == "file"
								&& fileAttrs.includes(next.type))
								|| (workspace.getBlockById(event.blockId).inputList[0].fieldRow[1].getValue() == "image"
								&& imageAttrs.includes(next.type))
								|| (workspace.getBlockById(event.blockId).inputList[0].fieldRow[1].getValue() == "archive"
								&& archiveAttrs.includes(next.type)))
								&& (!(workspace.getBlockById(event.blockId).inputList[0].fieldRow[1].getValue() == "string"
									|| workspace.getBlockById(event.blockId).inputList[0].fieldRow[1].getValue() == "number")
								&& warningAttrs.includes(next.type)
								|| ((workspace.getBlockById(event.blockId).inputList[0].fieldRow[1].getValue() == "string"
									|| workspace.getBlockById(event.blockId).inputList[0].fieldRow[1].getValue() == "number") && warningAttrs.includes(next.type)))) {
								//console.log(root.type);
								console.log('hello-2.1');
								//console.log(workspace.getBlockById(event.blockId).getInputTargetBlock('NEXT'));
								console.log(workspace.getBlockById(event.blockId));
								//workspace.getBlockById(event.blockId).inputList[0].connection.disconnect();
								next.outputConnection.disconnect();
								/*var prevConn = workspace.getBlockById(event.blockId).previousConnection.targetConnection.getSourceBlock().nextConnection;
								workspace.getBlockById(event.blockId).previousConnection.disconnect();
								if (workspace.getBlockById(event.blockId).nextConnection.targetConnection != null) {
									var nextConn = workspace.getBlockById(event.blockId).nextConnection;
									workspace.getBlockById(event.blockId).nextConnection.disconnect();
									prevConn.connect(nextConn);
								}*/
								//console.log('hello');
								return;
							}
						}
						next = workspace.getBlockById(event.blockId);
						while (next.outputConnection != null && next.outputConnection.targetConnection != null
							&& next.outputConnection.targetConnection.getSourceBlock().type != "block_model"
							&& next.outputConnection.targetConnection.getSourceBlock().type != "block_location"
							&& next.outputConnection.targetConnection.getSourceBlock().type != "set_model_first"
							&& next.outputConnection.targetConnection.getSourceBlock().type != "set_model_second"
							&& next.outputConnection.targetConnection.getSourceBlock().type != "set_location") {
							//console.log('hello');
							next = next.previousConnection.targetConnection.getSourceBlock();
							//console.log(next.type);
					    	//console.log(root.type);
							if (!((workspace.getBlockById(event.blockId).inputList[0].fieldRow[1].getValue() == "file"
								&& fileAttrs.includes(next.type))
								|| (workspace.getBlockById(event.blockId).inputList[0].fieldRow[1].getValue() == "image"
								&& imageAttrs.includes(next.type))
								|| (workspace.getBlockById(event.blockId).inputList[0].fieldRow[1].getValue() == "archive"
								&& archiveAttrs.includes(next.type)))
								&& (!(workspace.getBlockById(event.blockId).inputList[0].fieldRow[1].getValue() == "string"
									|| workspace.getBlockById(event.blockId).inputList[0].fieldRow[1].getValue() == "number")
								&& warningAttrs.includes(next.type)
								|| ((workspace.getBlockById(event.blockId).inputList[0].fieldRow[1].getValue() == "string"
									|| workspace.getBlockById(event.blockId).inputList[0].fieldRow[1].getValue() == "number") && warningAttrs.includes(next.type)))) {
								console.log('hello-2.2');
								//console.log(root.type);
								workspace.getBlockById(event.blockId).outputConnection.disconnect();
								/*var prevConn = workspace.getBlockById(event.blockId).previousConnection.targetConnection.getSourceBlock().nextConnection;
								workspace.getBlockById(event.blockId).previousConnection.disconnect();
								if (workspace.getBlockById(event.blockId).nextConnection.targetConnection != null) {
									var nextConn = workspace.getBlockById(event.blockId).nextConnection;
									workspace.getBlockById(event.blockId).nextConnection.disconnect();
									prevConn.connect(nextConn);
								}*/
								//console.log('hello');
								return;
							}
						}